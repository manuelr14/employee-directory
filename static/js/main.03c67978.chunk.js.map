{"version":3,"sources":["components/Navbar.js","components/Searchbar.js","components/Header.js","components/Card.js","components/Container.js","utils/API.js","components/SearchResult.js","App.js","serviceWorker.js","index.js"],"names":["styles","nav","background","padding","height","info","color","fontSize","Navbar","className","id","style","div","searchbar","margin","Searchbar","props","type","onChange","handleInputChange","value","name","placeholder","Header","row","link","target","Card","data-toggle","data-bs-tooltip","width","src","image","alt","href","email","Container","console","log","results","employees","filter","employee","login","search","length","map","result","profileUrl","axios","get","then","res","data","avatar_url","html_url","SearchResult","state","employeeList","query","API","setState","catch","err","event","handleFormSubmit","preventDefault","sortEmployee","this","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.03c67978.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../style/style.css\";\n\nconst styles = {\n    nav: {\n        background: \"rgb(9,51,94)\",\n        padding: \"3px\",\n        height:\"97px\"\n \n    },\n    info: {\n        color: \"white\",\n        fontSize: \"24px\"\n\n    },\n\n\n  }; \n\nfunction Navbar() {\n    return (\n        <div className=\"jumbotron border-danger\" id=\"jumbotron-red\" style={styles.nav}>\n            <p className=\"text-center\" style={styles.info}>Employee Directory</p>\n            <p className=\"text-center\" style={styles.info}>Click on carrots to filter by headings or use the search box</p>\n        </div>\n    )\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport \"../style/style.css\";\n\nconst styles = {\n    div: {\n      padding: \"0px 0px 0px 0px \",\n    \n    },\n    searchbar: {\n\n        margin: \"0px 0px 34px 0px\"\n      }\n\n  };\n\n\n\nfunction Searchbar(props) {\n\n    return (\n        <div className=\"row\" style={styles.div}>\n\n            <div className=\"col\">\n                <input type=\"search\" \n                onChange={props.handleInputChange}\n                value={props.value}\n                name=\"search\"\n                placeholder=\"Search\" \n                style={styles.searchbar}></input>\n\n            </div>\n        </div>\n\n    )\n\n};\n\n\nexport default Searchbar;","import React from \"react\";\nimport \"../style/style.css\";\n\nconst styles = {\n\n    info: {\n        fontSize: \"20px\",\n        padding: \" 5px 0px 0px 0px\",\n\n    },\n\n\n  }; \n\nfunction Header(){\n\n    return(\n\n        <div className=\"row\" id=\"container\" >\n        <div className=\"col text-left d-table-row float-left\">\n            <h1 className=\"text-left\" style={styles.info}>Image</h1>\n        </div>\n        <div className=\"col text-left d-table-row float-left\">\n            <h1 className=\"text-left\" style={styles.info}>Name</h1>\n        </div>\n        <div className=\"col text-left d-table-row float-left\">\n            <h1 className=\"text-left\" style={styles.info}>Phone</h1>\n        </div>\n        <div className=\"col text-left d-table-row float-left\">\n            <h1 className=\"text-left\" style={styles.info}>Email</h1>\n        </div>\n        <div className=\"col text-left float-left\">\n            <h1 className=\"text-left\" style={styles.info}>DOB</h1>\n        </div>\n    </div>\n    )\n};\n\nexport default Header;","import React from \"react\";\nimport \"../style/style.css\";\n\nconst styles = {\n    row: {\n        fontSize: \"25px\",\n        height: \"65px\"\n    },\n    info: {\n\n        fontSize: \"15px\",\n        margin: \" 17px 0px 0px 0px\",\n\n    },\n    link: {\n\n        fontSize: \"15px\",\n        target: \" blank\",\n    }\n\n};\n\n\nfunction Card(props) {\n    //  console.log(props.result)\n    return (\n\n        <ul className=\"list-group\">\n            {/* {props.results.map((result) => ( */}\n\n                <div className=\"row\" id=\"grey-back\" style={styles.row}>\n                    <div className=\"col text-left d-table-row float-left\"><img className=\"img-fluid justify-content-center align-items-center align-content-center align-self-center\" data-toggle=\"tooltip\" data-bs-tooltip=\"\" width=\"60px\" height=\"60px\" src={props.image} alt=\"profile\"></img></div>\n                    <div className=\"col text-left d-table-row float-left\">\n                        <h1 className=\"text-left\" style={styles.info}>{props.name}</h1>\n                    </div>\n                    <div className=\"col text-left d-table-row float-left\">\n                            <h1 className=\"text-left\" style={styles.info}>result.image</h1>\n                    </div>\n                    <div className=\"col text-left d-table-row float-left\"><a className=\"text-center\" href=\"#\" style={styles.link}>{props.email}</a></div>\n                    <div className=\"col text-left float-left\">\n                        <h1 className=\"text-left\" style={styles.info}>{props.email}</h1>\n                    </div>\n                </div>\n\n\n            {/* ))} */}\n        </ul>\n\n\n\n    )\n};\n\nexport default Card;","import React from \"react\";\nimport Header from \"./Header\"\nimport Card from \"./Card\";\n\nimport \"../style/style.css\"\n\nconst styles = {\n\n    info: {\n\n padding: \"0px\"\n\n\n    }\n\n  }; \n\n\n\nfunction Container(props) {\n    console.log(props.results)\n    \n    const employees = props.results.filter(employee => employee.login == props.search);\n    // Set this.state.friends equal to the new friends array\n    console.log(props.search)\n    console.log(employees)\n    console.log(employees.length)\n\n    if (employees.length != 0  ){\n        return (\n            <div className=\"container text-center\" style={styles.info}>\n                \n                <Header/>\n                {employees.map((result) => (\n                <Card name={result.login}\n                      image={result.image}\n                      email={result.profileUrl}  \n                \n                />\n                ))}\n            </div>\n        \n        \n            )\n            \n\n    } else {\n        return (\n            <div className=\"container text-center\" style={styles.info}>\n                \n                <Header/>\n                {props.results.map((result) => (\n                <Card name={result.login}\n                      image={result.image}\n                      email={result.profileUrl}  \n                \n                />\n                ))}\n            </div>\n        \n        \n            )\n            \n\n    }\n   \n    \n}\n\n\nexport default Container;","  \nimport axios from 'axios';\n\nexport default {\n\tgetRandomEmployee : function() {\n\t\treturn axios\n            .get('https://api.github.com/orgs/github/public_members')\n\t\t\t.then((res) => {\n\t\t\t\tconst employees = res.data;\n\t\t\t\treturn employees.map((employee) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tlogin      : employee.login,\n\t\t\t\t\t\timage      : employee.avatar_url,\n                        profileUrl : employee.html_url\n                        // name  : employee.name.first,\n                        // image : employee.thumbnail,\n                        // email : employee.email,\n                        // phone : employee.phone,\n                        // dob   : employee.dob.date\n                    };\n                    \n                });\n                \n\t\t\t});\n\t}\n};\n\n// name  : employee.name.first,\n// image : employee.thumbnail,\n// email : employee.email,\n// phone : employee.phone,\n// dob : employee.dob.date\n\n\n\n// https://api.github.com/orgs/github/public_members\n\n  \n// import axios from \"axios\";\n\n\n\n// export default {\n//   getAllEmployees: function() {\n//     return axios.get(\"https://randomuser.me/api/?results=200&nat=us&inc=picture,name,phone,email,dob\");\n//   },\n\n//  getEmployeeByName: function () {\n//      return axios.get(\"https://randomuser.me/api/?results=200&nat=us&name\");\n//  }\n// };","import React, { Component } from \"react\";\nimport Navbar from \"./Navbar\";\nimport Searchbar from \"./Searchbar\";\nimport Container from \"./Container\";\nimport Header from \"./Header\";\nimport Card from \"./Card\";\nimport API from \"../utils/API\";\n\nimport \"../style/style.css\"\n\n\nclass SearchResult extends Component {\n    state = {\n        result: [],\n        search: \"\"\n    };\n    componentDidMount() {\n        this.employeeList();\n    }\n\n    employeeList = query => {\n        API.getRandomEmployee(query)\n            .then((res) => this.setState({ result: res }))\n            //  console.log(res))\n            .catch((err) => console.log(err))\n    };\n\n\n\n\n    handleInputChange = event => {\n        const value = event.target.value;\n        this.setState({\n            search: value\n        });\n        // this.sortEmployee(this.state.search)\n       \n    };\n\n    handleFormSubmit = event => {\n        event.preventDefault();\n        // this.employeeList(this.state.search);\n        this.sortEmployee(this.state.search);\n    };\n\n    sortEmployee = login => {\n        // Filter this.state.friends for friends with an id not equal to the id being removed\n        const employees = this.state.result.filter(employee => employee.login == this.state.search);\n        // Set this.state.friends equal to the new friends array\n        console.log(employees)\n        // this.setState({ result:employees });\n      };\n\n    render() {\n\n        return (\n            <div>\n                <Navbar />\n                <Searchbar\n                value={this.state.search}\n                handleFormSubmit={this.handleFormSubmit}\n                handleInputChange={this.handleInputChange}\n                />\n                <Container results={this.state.result}\n                \n                search={this.state.search}\n                />\n\n               \n            </div>\n\n        )\n    }\n}\n\nexport default SearchResult;","import React, { Component} from 'react';\nimport SearchResult from \"./components/SearchResult\";\n\n\n\n\nfunction App() {\n  return (\n    <div>\n      <SearchResult/>\n    \n\n    </div>\n   \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}